@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic as LogicPackage {

package "Parser Classes" as ParserClasses{
}
Class XYZCommand
Class CommandResult
Class "{abstract}\nCommand" as Command

Class AutoCompleteXYZ
Class "{abstract}\nAutoComplete" as AutoComplete

Class "<<interface>>\nLogic" as Logic
Class LogicManager

package "Commands Utility Classes" as CommandsUtil {
}
}

package Model {
Class HiddenModel #FFFFFF
}

package Storage {
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .right.|> Logic
LogicManager -right->"1" ParserClasses
ParserClasses ..> XYZCommand : <<create>>
ParserClasses ..> AutoCompleteXYZ : <<create>>
XYZCommand .down.> CommandsUtil

XYZCommand -up-|> Command
AutoCompleteXYZ -up-|> AutoComplete
LogicManager .left.> Command : <<call>>
LogicManager .left.> AutoComplete : <<call>>

LogicManager --> Model
LogicManager --> Storage
Storage --[hidden] Model
Command .[hidden]up.> Storage
Command .right.> Model
AutoComplete .left.> Command
note right of XYZCommand: XYZCommand = AddCommand, \nFindCommand, etc
note right of AutoCompleteXYZ: AutoCompleteXYZ = AutoCompleteCommand, \nAutoCompleteNusNetId, etc

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult : <<create>>
@enduml
